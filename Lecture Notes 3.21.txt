Lecture Notes:
	- Paging: A way of putting something in RAM that's executable, then moving it and putting something in its place 

	Important activity for test: 
	- Our program only has enough memory space to hold 3 items in active memory. Its active memory locations are m0, m1, and m2. We don't know ahead of time what the order they are going to be needed in

String of integers: 2301203120316457
	1. Program begins execution and goes to the very first item, 2
		a. The memory manager is now looking to see if 2 is in m0, m1, or m2
		b.  If it does not, we take a time him to access the very first item in the program (Page fault) because it is not currently there
		c. Put 2 into m0
	2. Program moves to the second item, 0
		a. The memory manager checks to see if 0 is in any memory space, which it is not
		b. Access the second item in the program (string)
		c. Put 0 in m1 
	3. Program moves to third item, 3
		a. Check to see if 3 is in memory 
		b. Not in memory, access it elsewhere 
		c. Put 3 in m2
	4. Sidenote: Our memory is FIFO, so the item that will be replaced is in the first RAM slot: 2 (m0)
	5. Program moves to the fourth item in the string 1
		a. Check if 1 is in memory
		b. It is not, so we must access it
		c. Put 1 in m0
	6. Program moves to the fifth element, 2.
		a. Check if 2 is in memory
		b. It is not because we just removed it, we need to take the time hit to access it again 
		c. put 2 in m1
	7. Program moves to sixth, seventh, eighth, and so on 
		a. Every successive item that we're looking for in memory was JUST removed from memory... this is expensive because we're page faulting every time 

	- If we have more RAM here, by adding an additional slot, we can store 4 numbers that repeat and we do not page fault as often and we would decrease the number of page faults from 16 to 8
	PageFault --> FIFO[3] = 16
	PageFault --> FIFO[4] = 8

	- This is the optimal algorithm, and is a better option than FIFO algorithm in this case, but we don't always know what's optimal in each scenario
	A counter example is: 
	String of ints: 012301401234
	PageFault --> FIFO[3] = 9
	PageFault --> FIFO[4] = 10
This demonstrates that adding ram isn't always the answer 