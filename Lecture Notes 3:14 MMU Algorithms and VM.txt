Lecture Notes: 
	- Make Files: 
		- script that gets run instead of normal compilation commands 
		- Each file must be compiled separately like in our project and the playable character files 
		- That make file will compile the same on all systems
		example:

	creating a makefile in terminal: 
		touch Makefile
		vim Makefile 

	what the makefile should look like: 
		!#/bin/bash
	
		gcc -o rouge rouge.c
		gcc -o wizard wizard.c
		gcc -o barbarian barbarian.c
		gcc -o controller controller.c 

		then save 

		- these are run in order and compiled into their files 

		-might have to change permissions: chmod +x Makefile


	- Memory management with bitmaps: 
		- memory is partitioned into small sub sections 
		- those subsections are assigned a binary value to track whether there is space or not
			- a 0 indicates empty space, a 1 indicates a used piece of memory
		- we can use linked lists for this implementation 
	- Memory Management Algorithms: 
		- First fit: 
			- find the first location where the process will fit, will begin from the bottom and go upward toward top of memory addresses 
		- Next fit: 
			- Remembers where we left off so that we dont have to start from the memory address 0
		- Best fit: 
			- searches entire memory space and finds the most like size for the process
		- Worst fit: 
			- searches entire memory space and finds the largest and places the process there 
		- Quick fit: 
			- 
		- these seek to either optimize (best, worst) and be time efficient (first, next) 
	- Virtual Memory: 
		- There is a need to run programs that are too large to fit in memory 
		- solution adopted in the 60s, split programs into little pieces, called overlays 
			- Kept on the disk, swapped in and out of memory 
		- virtual memory: each program has its own address space, broken up into chunks called pages
	- Paging:
		- When we ask programs for some bit of memory that we will use in our program, this way not everything is stored in RAM 
		- we want to bring that information into active RAM 
		- Memory Management Unit acts as one continuous RAM that all the programs will refer to 